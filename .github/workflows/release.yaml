name: Release

on:
  push:

jobs:
  scrape-song-list:
    name: Scrape USDB song list
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Linux specific dependencies for dbus-python
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc python3-dev libdbus-1-dev libglib2.0-dev
          pkg-config --cflags --libs dbus-1
          export LDFLAGS="-lm"
      - name: Install poetry
        run: |
          python -m pip install poetry
      - name: Install dependencies
        run: |
          poetry install --without dev --without build
      - uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            song_list.json
            CHANGELOG.md

  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    needs: scrape-song-list
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            TARGET: Linux
            PYINSTALLER_ARGS: >-
              --onefile
              --add-data 'src/usdb_syncer/db/sql:src/usdb_syncer/db/sql'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: Install Linux specific dependencies for dbus-python
        if: matrix.TARGET == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc python3-dev libdbus-1-dev
          pkg-config --cflags --libs dbus-1
          export LDFLAGS="-lm"
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.7.*"
          setup-python: false
          no-qt-binaries: true
      - name: Install poetry
        run: |
          python -m pip install poetry
      - name: Install dependencies
        run: |
          poetry install --without dev
      - name: Write version and commit hash
        run: >
          poetry run write_release_info
          -p src/usdb_syncer/constants.py
          -v ${{ github.ref_name }}
          -c ${{ github.workflow_sha }}
      - name: Generate GUI elements
        run: poetry run generate_pyside_files
      - name: Build with pyinstaller for ${{matrix.os}}
        # _tkinter hook is run erroneously?
        run: >
          poetry run pyinstaller
          -n 'USDB_Syncer-${{github.ref_name}}-${{matrix.TARGET}}'
          --exclude-module _tkinter
          ${{matrix.PYINSTALLER_ARGS}}
          src/usdb_syncer/gui/__init__.py
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: |
            dist/*Linux

  release:
    name: Create release
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - name: Extract Release Notes
        id: extract_notes
        run: >
          awk 'BEGIN { RS="<!-- [0-9]+\\.[0-9]+\\.[0-9]+ -->\\s*"; ORS=""; }
          NR==2 { print $0; exit; }'
          artifacts/CHANGELOG.md >CHANGELOG.md
        shell: bash
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/USDB_Syncer*"
          bodyFile: "CHANGELOG.md"
